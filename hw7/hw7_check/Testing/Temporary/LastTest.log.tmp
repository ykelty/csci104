Start testing: Jul 10 21:05 PDT
----------------------------------------------------------
1/59 Testing: BST.ConstructionDestruction
1/59 Test: BST.ConstructionDestruction
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BST.ConstructionDestruction"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BST.ConstructionDestruction" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3008== Memcheck, a memory error detector
==3008== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3008== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3008== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BST.ConstructionDestruction
==3008== 
Running main() from gtest_main.cc
Note: Google Test filter = BST.ConstructionDestruction
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BST
[ RUN      ] BST.ConstructionDestruction
[       OK ] BST.ConstructionDestruction (6 ms)
[----------] 1 test from BST (12 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (41 ms total)
[  PASSED  ] 1 test.
==3008== 
==3008== HEAP SUMMARY:
==3008==     in use at exit: 72,704 bytes in 1 blocks
==3008==   total heap usage: 383 allocs, 382 frees, 133,008 bytes allocated
==3008== 
==3008== LEAK SUMMARY:
==3008==    definitely lost: 0 bytes in 0 blocks
==3008==    indirectly lost: 0 bytes in 0 blocks
==3008==      possibly lost: 0 bytes in 0 blocks
==3008==    still reachable: 0 bytes in 0 blocks
==3008==         suppressed: 72,704 bytes in 1 blocks
==3008== 
==3008== For counts of detected and suppressed errors, rerun with: -v
==3008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"BST.ConstructionDestruction" end time: Jul 10 21:05 PDT
"BST.ConstructionDestruction" time elapsed: 00:00:01
----------------------------------------------------------

2/59 Testing: BSTInsert.JustRoot
2/59 Test: BSTInsert.JustRoot
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.JustRoot"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.JustRoot" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3009== Memcheck, a memory error detector
==3009== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3009== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3009== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.JustRoot
==3009== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.JustRoot
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.JustRoot
[       OK ] BSTInsert.JustRoot (35 ms)
[----------] 1 test from BSTInsert (41 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (71 ms total)
[  PASSED  ] 1 test.
==3009== 
==3009== HEAP SUMMARY:
==3009==     in use at exit: 72,704 bytes in 1 blocks
==3009==   total heap usage: 385 allocs, 384 frees, 133,105 bytes allocated
==3009== 
==3009== LEAK SUMMARY:
==3009==    definitely lost: 0 bytes in 0 blocks
==3009==    indirectly lost: 0 bytes in 0 blocks
==3009==      possibly lost: 0 bytes in 0 blocks
==3009==    still reachable: 0 bytes in 0 blocks
==3009==         suppressed: 72,704 bytes in 1 blocks
==3009== 
==3009== For counts of detected and suppressed errors, rerun with: -v
==3009== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.JustRoot" end time: Jul 10 21:05 PDT
"BSTInsert.JustRoot" time elapsed: 00:00:00
----------------------------------------------------------

3/59 Testing: BSTInsert.DoubleInsertLeft
3/59 Test: BSTInsert.DoubleInsertLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.DoubleInsertLeft"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.DoubleInsertLeft" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3010== Memcheck, a memory error detector
==3010== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3010== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3010== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.DoubleInsertLeft
==3010== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.DoubleInsertLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.DoubleInsertLeft
[       OK ] BSTInsert.DoubleInsertLeft (34 ms)
[----------] 1 test from BSTInsert (40 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (70 ms total)
[  PASSED  ] 1 test.
==3010== 
==3010== HEAP SUMMARY:
==3010==     in use at exit: 72,704 bytes in 1 blocks
==3010==   total heap usage: 387 allocs, 386 frees, 133,161 bytes allocated
==3010== 
==3010== LEAK SUMMARY:
==3010==    definitely lost: 0 bytes in 0 blocks
==3010==    indirectly lost: 0 bytes in 0 blocks
==3010==      possibly lost: 0 bytes in 0 blocks
==3010==    still reachable: 0 bytes in 0 blocks
==3010==         suppressed: 72,704 bytes in 1 blocks
==3010== 
==3010== For counts of detected and suppressed errors, rerun with: -v
==3010== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.DoubleInsertLeft" end time: Jul 10 21:05 PDT
"BSTInsert.DoubleInsertLeft" time elapsed: 00:00:00
----------------------------------------------------------

4/59 Testing: BSTInsert.DoubleInsertRight
4/59 Test: BSTInsert.DoubleInsertRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.DoubleInsertRight"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.DoubleInsertRight" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3011== Memcheck, a memory error detector
==3011== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3011== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3011== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.DoubleInsertRight
==3011== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.DoubleInsertRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.DoubleInsertRight
[       OK ] BSTInsert.DoubleInsertRight (41 ms)
[----------] 1 test from BSTInsert (47 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (78 ms total)
[  PASSED  ] 1 test.
==3011== 
==3011== HEAP SUMMARY:
==3011==     in use at exit: 72,704 bytes in 1 blocks
==3011==   total heap usage: 387 allocs, 386 frees, 133,168 bytes allocated
==3011== 
==3011== LEAK SUMMARY:
==3011==    definitely lost: 0 bytes in 0 blocks
==3011==    indirectly lost: 0 bytes in 0 blocks
==3011==      possibly lost: 0 bytes in 0 blocks
==3011==    still reachable: 0 bytes in 0 blocks
==3011==         suppressed: 72,704 bytes in 1 blocks
==3011== 
==3011== For counts of detected and suppressed errors, rerun with: -v
==3011== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.DoubleInsertRight" end time: Jul 10 21:05 PDT
"BSTInsert.DoubleInsertRight" time elapsed: 00:00:00
----------------------------------------------------------

5/59 Testing: BSTInsert.InsertZigZigLeft
5/59 Test: BSTInsert.InsertZigZigLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZigLeft"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.InsertZigZigLeft" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3012== Memcheck, a memory error detector
==3012== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3012== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3012== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZigLeft
==3012== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZigLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZigLeft
[       OK ] BSTInsert.InsertZigZigLeft (36 ms)
[----------] 1 test from BSTInsert (42 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (72 ms total)
[  PASSED  ] 1 test.
==3012== 
==3012== HEAP SUMMARY:
==3012==     in use at exit: 72,704 bytes in 1 blocks
==3012==   total heap usage: 389 allocs, 388 frees, 133,241 bytes allocated
==3012== 
==3012== LEAK SUMMARY:
==3012==    definitely lost: 0 bytes in 0 blocks
==3012==    indirectly lost: 0 bytes in 0 blocks
==3012==      possibly lost: 0 bytes in 0 blocks
==3012==    still reachable: 0 bytes in 0 blocks
==3012==         suppressed: 72,704 bytes in 1 blocks
==3012== 
==3012== For counts of detected and suppressed errors, rerun with: -v
==3012== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZigLeft" end time: Jul 10 21:05 PDT
"BSTInsert.InsertZigZigLeft" time elapsed: 00:00:00
----------------------------------------------------------

6/59 Testing: BSTInsert.InsertZigZigRight
6/59 Test: BSTInsert.InsertZigZigRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZigRight"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.InsertZigZigRight" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3013== Memcheck, a memory error detector
==3013== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3013== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3013== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZigRight
==3013== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZigRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZigRight
[       OK ] BSTInsert.InsertZigZigRight (44 ms)
[----------] 1 test from BSTInsert (52 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (83 ms total)
[  PASSED  ] 1 test.
==3013== 
==3013== HEAP SUMMARY:
==3013==     in use at exit: 72,704 bytes in 1 blocks
==3013==   total heap usage: 389 allocs, 388 frees, 133,248 bytes allocated
==3013== 
==3013== LEAK SUMMARY:
==3013==    definitely lost: 0 bytes in 0 blocks
==3013==    indirectly lost: 0 bytes in 0 blocks
==3013==      possibly lost: 0 bytes in 0 blocks
==3013==    still reachable: 0 bytes in 0 blocks
==3013==         suppressed: 72,704 bytes in 1 blocks
==3013== 
==3013== For counts of detected and suppressed errors, rerun with: -v
==3013== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.92 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZigRight" end time: Jul 10 21:05 PDT
"BSTInsert.InsertZigZigRight" time elapsed: 00:00:00
----------------------------------------------------------

7/59 Testing: BSTInsert.InsertZigZagLeft
7/59 Test: BSTInsert.InsertZigZagLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZagLeft"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.InsertZigZagLeft" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3014== Memcheck, a memory error detector
==3014== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3014== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3014== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZagLeft
==3014== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZagLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZagLeft
[       OK ] BSTInsert.InsertZigZagLeft (37 ms)
[----------] 1 test from BSTInsert (45 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (74 ms total)
[  PASSED  ] 1 test.
==3014== 
==3014== HEAP SUMMARY:
==3014==     in use at exit: 72,704 bytes in 1 blocks
==3014==   total heap usage: 389 allocs, 388 frees, 133,241 bytes allocated
==3014== 
==3014== LEAK SUMMARY:
==3014==    definitely lost: 0 bytes in 0 blocks
==3014==    indirectly lost: 0 bytes in 0 blocks
==3014==      possibly lost: 0 bytes in 0 blocks
==3014==    still reachable: 0 bytes in 0 blocks
==3014==         suppressed: 72,704 bytes in 1 blocks
==3014== 
==3014== For counts of detected and suppressed errors, rerun with: -v
==3014== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZagLeft" end time: Jul 10 21:05 PDT
"BSTInsert.InsertZigZagLeft" time elapsed: 00:00:00
----------------------------------------------------------

8/59 Testing: BSTInsert.InsertZigZagRight
8/59 Test: BSTInsert.InsertZigZagRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZagRight"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.InsertZigZagRight" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3015== Memcheck, a memory error detector
==3015== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3015== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3015== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZagRight
==3015== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZagRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZagRight
[       OK ] BSTInsert.InsertZigZagRight (38 ms)
[----------] 1 test from BSTInsert (44 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (74 ms total)
[  PASSED  ] 1 test.
==3015== 
==3015== HEAP SUMMARY:
==3015==     in use at exit: 72,704 bytes in 1 blocks
==3015==   total heap usage: 389 allocs, 388 frees, 133,248 bytes allocated
==3015== 
==3015== LEAK SUMMARY:
==3015==    definitely lost: 0 bytes in 0 blocks
==3015==    indirectly lost: 0 bytes in 0 blocks
==3015==      possibly lost: 0 bytes in 0 blocks
==3015==    still reachable: 0 bytes in 0 blocks
==3015==         suppressed: 72,704 bytes in 1 blocks
==3015== 
==3015== For counts of detected and suppressed errors, rerun with: -v
==3015== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.88 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZagRight" end time: Jul 10 21:05 PDT
"BSTInsert.InsertZigZagRight" time elapsed: 00:00:00
----------------------------------------------------------

9/59 Testing: BSTInsert.7Elements
9/59 Test: BSTInsert.7Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.7Elements"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.7Elements" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3016== Memcheck, a memory error detector
==3016== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3016== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3016== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.7Elements
==3016== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.7Elements
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.7Elements
[       OK ] BSTInsert.7Elements (45 ms)
[----------] 1 test from BSTInsert (52 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (81 ms total)
[  PASSED  ] 1 test.
==3016== 
==3016== HEAP SUMMARY:
==3016==     in use at exit: 72,704 bytes in 1 blocks
==3016==   total heap usage: 397 allocs, 396 frees, 133,512 bytes allocated
==3016== 
==3016== LEAK SUMMARY:
==3016==    definitely lost: 0 bytes in 0 blocks
==3016==    indirectly lost: 0 bytes in 0 blocks
==3016==      possibly lost: 0 bytes in 0 blocks
==3016==    still reachable: 0 bytes in 0 blocks
==3016==         suppressed: 72,704 bytes in 1 blocks
==3016== 
==3016== For counts of detected and suppressed errors, rerun with: -v
==3016== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.88 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.7Elements" end time: Jul 10 21:05 PDT
"BSTInsert.7Elements" time elapsed: 00:00:00
----------------------------------------------------------

10/59 Testing: BSTClear.Clear
10/59 Test: BSTClear.Clear
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTClear.Clear"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTClear.Clear" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3017== Memcheck, a memory error detector
==3017== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3017== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3017== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTClear.Clear
==3017== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTClear.Clear
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTClear
[ RUN      ] BSTClear.Clear
[       OK ] BSTClear.Clear (18 ms)
[----------] 1 test from BSTClear (25 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (56 ms total)
[  PASSED  ] 1 test.
==3017== 
==3017== HEAP SUMMARY:
==3017==     in use at exit: 72,704 bytes in 1 blocks
==3017==   total heap usage: 352 allocs, 351 frees, 131,974 bytes allocated
==3017== 
==3017== LEAK SUMMARY:
==3017==    definitely lost: 0 bytes in 0 blocks
==3017==    indirectly lost: 0 bytes in 0 blocks
==3017==      possibly lost: 0 bytes in 0 blocks
==3017==    still reachable: 0 bytes in 0 blocks
==3017==         suppressed: 72,704 bytes in 1 blocks
==3017== 
==3017== For counts of detected and suppressed errors, rerun with: -v
==3017== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"BSTClear.Clear" end time: Jul 10 21:05 PDT
"BSTClear.Clear" time elapsed: 00:00:00
----------------------------------------------------------

11/59 Testing: BSTFind.InvalidFind
11/59 Test: BSTFind.InvalidFind
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTFind.InvalidFind"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTFind.InvalidFind" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3018== Memcheck, a memory error detector
==3018== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3018== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3018== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTFind.InvalidFind
==3018== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTFind.InvalidFind
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTFind
[ RUN      ] BSTFind.InvalidFind
[       OK ] BSTFind.InvalidFind (13 ms)
[----------] 1 test from BSTFind (20 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (51 ms total)
[  PASSED  ] 1 test.
==3018== 
==3018== HEAP SUMMARY:
==3018==     in use at exit: 72,704 bytes in 1 blocks
==3018==   total heap usage: 385 allocs, 384 frees, 133,032 bytes allocated
==3018== 
==3018== LEAK SUMMARY:
==3018==    definitely lost: 0 bytes in 0 blocks
==3018==    indirectly lost: 0 bytes in 0 blocks
==3018==      possibly lost: 0 bytes in 0 blocks
==3018==    still reachable: 0 bytes in 0 blocks
==3018==         suppressed: 72,704 bytes in 1 blocks
==3018== 
==3018== For counts of detected and suppressed errors, rerun with: -v
==3018== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.84 sec
----------------------------------------------------------
Test Passed.
"BSTFind.InvalidFind" end time: Jul 10 21:05 PDT
"BSTFind.InvalidFind" time elapsed: 00:00:00
----------------------------------------------------------

12/59 Testing: BSTInsert.Duplicates
12/59 Test: BSTInsert.Duplicates
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Duplicates"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.Duplicates" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3019== Memcheck, a memory error detector
==3019== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3019== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3019== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.Duplicates
==3019== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Duplicates
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Duplicates
[       OK ] BSTInsert.Duplicates (43 ms)
[----------] 1 test from BSTInsert (50 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (80 ms total)
[  PASSED  ] 1 test.
==3019== 
==3019== HEAP SUMMARY:
==3019==     in use at exit: 72,704 bytes in 1 blocks
==3019==   total heap usage: 391 allocs, 390 frees, 133,279 bytes allocated
==3019== 
==3019== LEAK SUMMARY:
==3019==    definitely lost: 0 bytes in 0 blocks
==3019==    indirectly lost: 0 bytes in 0 blocks
==3019==      possibly lost: 0 bytes in 0 blocks
==3019==    still reachable: 0 bytes in 0 blocks
==3019==         suppressed: 72,704 bytes in 1 blocks
==3019== 
==3019== For counts of detected and suppressed errors, rerun with: -v
==3019== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.87 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Duplicates" end time: Jul 10 21:05 PDT
"BSTInsert.Duplicates" time elapsed: 00:00:00
----------------------------------------------------------

13/59 Testing: BSTInsert.BasicRandom
13/59 Test: BSTInsert.BasicRandom
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.BasicRandom"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.BasicRandom" start time: Jul 10 21:05 PDT
Output:
----------------------------------------------------------
==3020== Memcheck, a memory error detector
==3020== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3020== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3020== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.BasicRandom
==3020== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.BasicRandom
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.BasicRandom
[       OK ] BSTInsert.BasicRandom (59 ms)
[----------] 1 test from BSTInsert (65 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (95 ms total)
[  PASSED  ] 1 test.
==3020== 
==3020== HEAP SUMMARY:
==3020==     in use at exit: 72,704 bytes in 1 blocks
==3020==   total heap usage: 404 allocs, 403 frees, 133,806 bytes allocated
==3020== 
==3020== LEAK SUMMARY:
==3020==    definitely lost: 0 bytes in 0 blocks
==3020==    indirectly lost: 0 bytes in 0 blocks
==3020==      possibly lost: 0 bytes in 0 blocks
==3020==    still reachable: 0 bytes in 0 blocks
==3020==         suppressed: 72,704 bytes in 1 blocks
==3020== 
==3020== For counts of detected and suppressed errors, rerun with: -v
==3020== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.90 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.BasicRandom" end time: Jul 10 21:06 PDT
"BSTInsert.BasicRandom" time elapsed: 00:00:00
----------------------------------------------------------

14/59 Testing: BSTInsert.Random50x30ele
14/59 Test: BSTInsert.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Random50x30ele"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.Random50x30ele" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3021== Memcheck, a memory error detector
==3021== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3021== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3021== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.Random50x30ele
==3021== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Random50x30ele
[       OK ] BSTInsert.Random50x30ele (208 ms)
[----------] 1 test from BSTInsert (213 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (246 ms total)
[  PASSED  ] 1 test.
==3021== 
==3021== HEAP SUMMARY:
==3021==     in use at exit: 72,704 bytes in 1 blocks
==3021==   total heap usage: 3,534 allocs, 3,533 frees, 263,387 bytes allocated
==3021== 
==3021== LEAK SUMMARY:
==3021==    definitely lost: 0 bytes in 0 blocks
==3021==    indirectly lost: 0 bytes in 0 blocks
==3021==      possibly lost: 0 bytes in 0 blocks
==3021==    still reachable: 0 bytes in 0 blocks
==3021==         suppressed: 72,704 bytes in 1 blocks
==3021== 
==3021== For counts of detected and suppressed errors, rerun with: -v
==3021== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.02 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Random50x30ele" end time: Jul 10 21:06 PDT
"BSTInsert.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

15/59 Testing: BSTInsert.Random3x5000ele
15/59 Test: BSTInsert.Random3x5000ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Random3x5000ele"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTInsert.Random3x5000ele" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3022== Memcheck, a memory error detector
==3022== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3022== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3022== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTInsert.Random3x5000ele
==3022== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Random3x5000ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Random3x5000ele
[       OK ] BSTInsert.Random3x5000ele (874 ms)
[----------] 1 test from BSTInsert (881 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (917 ms total)
[  PASSED  ] 1 test.
==3022== 
==3022== HEAP SUMMARY:
==3022==     in use at exit: 72,704 bytes in 1 blocks
==3022==   total heap usage: 30,393 allocs, 30,392 frees, 1,393,258 bytes allocated
==3022== 
==3022== LEAK SUMMARY:
==3022==    definitely lost: 0 bytes in 0 blocks
==3022==    indirectly lost: 0 bytes in 0 blocks
==3022==      possibly lost: 0 bytes in 0 blocks
==3022==    still reachable: 0 bytes in 0 blocks
==3022==         suppressed: 72,704 bytes in 1 blocks
==3022== 
==3022== For counts of detected and suppressed errors, rerun with: -v
==3022== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.74 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Random3x5000ele" end time: Jul 10 21:06 PDT
"BSTInsert.Random3x5000ele" time elapsed: 00:00:01
----------------------------------------------------------

16/59 Testing: BSTRemove.EmptyTree
16/59 Test: BSTRemove.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.EmptyTree"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTRemove.EmptyTree" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3023== Memcheck, a memory error detector
==3023== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3023== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3023== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTRemove.EmptyTree
==3023== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.EmptyTree
[       OK ] BSTRemove.EmptyTree (14 ms)
[----------] 1 test from BSTRemove (19 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (49 ms total)
[  PASSED  ] 1 test.
==3023== 
==3023== HEAP SUMMARY:
==3023==     in use at exit: 72,704 bytes in 1 blocks
==3023==   total heap usage: 384 allocs, 383 frees, 132,987 bytes allocated
==3023== 
==3023== LEAK SUMMARY:
==3023==    definitely lost: 0 bytes in 0 blocks
==3023==    indirectly lost: 0 bytes in 0 blocks
==3023==      possibly lost: 0 bytes in 0 blocks
==3023==    still reachable: 0 bytes in 0 blocks
==3023==         suppressed: 72,704 bytes in 1 blocks
==3023== 
==3023== For counts of detected and suppressed errors, rerun with: -v
==3023== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.EmptyTree" end time: Jul 10 21:06 PDT
"BSTRemove.EmptyTree" time elapsed: 00:00:00
----------------------------------------------------------

17/59 Testing: BSTRemove.NodeMismatch
17/59 Test: BSTRemove.NodeMismatch
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.NodeMismatch"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTRemove.NodeMismatch" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3024== Memcheck, a memory error detector
==3024== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3024== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3024== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTRemove.NodeMismatch
==3024== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.NodeMismatch
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.NodeMismatch
[       OK ] BSTRemove.NodeMismatch (41 ms)
[----------] 1 test from BSTRemove (47 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (77 ms total)
[  PASSED  ] 1 test.
==3024== 
==3024== HEAP SUMMARY:
==3024==     in use at exit: 72,704 bytes in 1 blocks
==3024==   total heap usage: 388 allocs, 387 frees, 133,328 bytes allocated
==3024== 
==3024== LEAK SUMMARY:
==3024==    definitely lost: 0 bytes in 0 blocks
==3024==    indirectly lost: 0 bytes in 0 blocks
==3024==      possibly lost: 0 bytes in 0 blocks
==3024==    still reachable: 0 bytes in 0 blocks
==3024==         suppressed: 72,704 bytes in 1 blocks
==3024== 
==3024== For counts of detected and suppressed errors, rerun with: -v
==3024== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.87 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.NodeMismatch" end time: Jul 10 21:06 PDT
"BSTRemove.NodeMismatch" time elapsed: 00:00:00
----------------------------------------------------------

18/59 Testing: BSTRemove.SingleRemove
18/59 Test: BSTRemove.SingleRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.SingleRemove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTRemove.SingleRemove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3025== Memcheck, a memory error detector
==3025== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3025== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3025== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTRemove.SingleRemove
==3025== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.SingleRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.SingleRemove
[       OK ] BSTRemove.SingleRemove (16 ms)
[----------] 1 test from BSTRemove (22 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (54 ms total)
[  PASSED  ] 1 test.
==3025== 
==3025== HEAP SUMMARY:
==3025==     in use at exit: 72,704 bytes in 1 blocks
==3025==   total heap usage: 384 allocs, 383 frees, 133,021 bytes allocated
==3025== 
==3025== LEAK SUMMARY:
==3025==    definitely lost: 0 bytes in 0 blocks
==3025==    indirectly lost: 0 bytes in 0 blocks
==3025==      possibly lost: 0 bytes in 0 blocks
==3025==    still reachable: 0 bytes in 0 blocks
==3025==         suppressed: 72,704 bytes in 1 blocks
==3025== 
==3025== For counts of detected and suppressed errors, rerun with: -v
==3025== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.84 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.SingleRemove" end time: Jul 10 21:06 PDT
"BSTRemove.SingleRemove" time elapsed: 00:00:00
----------------------------------------------------------

19/59 Testing: BSTRemove.RightChildRemove
19/59 Test: BSTRemove.RightChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.RightChildRemove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTRemove.RightChildRemove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3026== Memcheck, a memory error detector
==3026== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3026== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3026== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTRemove.RightChildRemove
==3026== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.RightChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.RightChildRemove
[       OK ] BSTRemove.RightChildRemove (36 ms)
[----------] 1 test from BSTRemove (43 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (77 ms total)
[  PASSED  ] 1 test.
==3026== 
==3026== HEAP SUMMARY:
==3026==     in use at exit: 72,704 bytes in 1 blocks
==3026==   total heap usage: 388 allocs, 387 frees, 133,225 bytes allocated
==3026== 
==3026== LEAK SUMMARY:
==3026==    definitely lost: 0 bytes in 0 blocks
==3026==    indirectly lost: 0 bytes in 0 blocks
==3026==      possibly lost: 0 bytes in 0 blocks
==3026==    still reachable: 0 bytes in 0 blocks
==3026==         suppressed: 72,704 bytes in 1 blocks
==3026== 
==3026== For counts of detected and suppressed errors, rerun with: -v
==3026== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.RightChildRemove" end time: Jul 10 21:06 PDT
"BSTRemove.RightChildRemove" time elapsed: 00:00:00
----------------------------------------------------------

20/59 Testing: BSTRemove.LeftChildRemove
20/59 Test: BSTRemove.LeftChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.LeftChildRemove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTRemove.LeftChildRemove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3027== Memcheck, a memory error detector
==3027== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3027== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3027== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTRemove.LeftChildRemove
==3027== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.LeftChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.LeftChildRemove
[       OK ] BSTRemove.LeftChildRemove (37 ms)
[----------] 1 test from BSTRemove (43 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (72 ms total)
[  PASSED  ] 1 test.
==3027== 
==3027== HEAP SUMMARY:
==3027==     in use at exit: 72,704 bytes in 1 blocks
==3027==   total heap usage: 388 allocs, 387 frees, 133,218 bytes allocated
==3027== 
==3027== LEAK SUMMARY:
==3027==    definitely lost: 0 bytes in 0 blocks
==3027==    indirectly lost: 0 bytes in 0 blocks
==3027==      possibly lost: 0 bytes in 0 blocks
==3027==    still reachable: 0 bytes in 0 blocks
==3027==         suppressed: 72,704 bytes in 1 blocks
==3027== 
==3027== For counts of detected and suppressed errors, rerun with: -v
==3027== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.LeftChildRemove" end time: Jul 10 21:06 PDT
"BSTRemove.LeftChildRemove" time elapsed: 00:00:00
----------------------------------------------------------

21/59 Testing: BSTRemove.TwoChildrenRemove_3Node
21/59 Test: BSTRemove.TwoChildrenRemove_3Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.TwoChildrenRemove_3Node"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTRemove.TwoChildrenRemove_3Node" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3028== Memcheck, a memory error detector
==3028== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3028== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3028== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTRemove.TwoChildrenRemove_3Node
==3028== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.TwoChildrenRemove_3Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.TwoChildrenRemove_3Node
==3028== Invalid read of size 4
==3028==    at 0x431A0C: testing::AssertionResult checkValidTraversal<int, double>(Node<int, double>*) (check_bst.h:56)
==3028==    by 0x43021D: testing::AssertionResult isValidTree<int, double>(BinarySearchTree<int, double>&) (check_bst.h:47)
==3028==    by 0x42E859: testing::AssertionResult verifyBST<int, double>(BinarySearchTree<int, double>&, std::set<int, std::less<int>, std::allocator<int> > const&) (check_bst.h:335)
==3028==    by 0x422A0B: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:70)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce76f8 is 8 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
==3028== Invalid read of size 4
==3028==    at 0x414449: testing::Message& testing::Message::operator<< <int>(int const&) (gtest-message.h:131)
==3028==    by 0x410874: testing::AssertionResult& testing::AssertionResult::operator<< <int>(int const&) (gtest.h:283)
==3028==    by 0x431A99: testing::AssertionResult checkValidTraversal<int, double>(Node<int, double>*) (check_bst.h:57)
==3028==    by 0x43021D: testing::AssertionResult isValidTree<int, double>(BinarySearchTree<int, double>&) (check_bst.h:47)
==3028==    by 0x42E859: testing::AssertionResult verifyBST<int, double>(BinarySearchTree<int, double>&, std::set<int, std::less<int>, std::allocator<int> > const&) (check_bst.h:335)
==3028==    by 0x422A0B: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:70)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce76f8 is 8 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/test_remove.cpp:70: Failure
Value of: verifyBST(bst, {1, 3})
  Actual: false (The left child of 1 is 2 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/test_remove.cpp:79: Failure
Value of: bst.root_->getLeft()
  Actual: 0x5ce76f0
Expected: nullptr
Which is: NULL
==3028== Invalid read of size 8
==3028==    at 0x431891: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:703)
==3028==    by 0x4318D6: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:705)
==3028==    by 0x42F9D5: BinarySearchTree<int, double>::clear() (bst.h:728)
==3028==    by 0x42E13D: BinarySearchTree<int, double>::~BinarySearchTree() (bst.h:429)
==3028==    by 0x422F98: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:79)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce76f0 is 0 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
==3028== Invalid read of size 8
==3028==    at 0x42ED62: Node<int, double>::getLeft() const (bst.h:135)
==3028==    by 0x4318A3: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:703)
==3028==    by 0x4318D6: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:705)
==3028==    by 0x42F9D5: BinarySearchTree<int, double>::clear() (bst.h:728)
==3028==    by 0x42E13D: BinarySearchTree<int, double>::~BinarySearchTree() (bst.h:429)
==3028==    by 0x422F98: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:79)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce7710 is 32 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
==3028== Invalid read of size 8
==3028==    at 0x4318DB: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:710)
==3028==    by 0x4318D6: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:705)
==3028==    by 0x42F9D5: BinarySearchTree<int, double>::clear() (bst.h:728)
==3028==    by 0x42E13D: BinarySearchTree<int, double>::~BinarySearchTree() (bst.h:429)
==3028==    by 0x422F98: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:79)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce76f0 is 0 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
==3028== Invalid read of size 8
==3028==    at 0x42ED50: Node<int, double>::getRight() const (bst.h:144)
==3028==    by 0x4318ED: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:710)
==3028==    by 0x4318D6: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:705)
==3028==    by 0x42F9D5: BinarySearchTree<int, double>::clear() (bst.h:728)
==3028==    by 0x42E13D: BinarySearchTree<int, double>::~BinarySearchTree() (bst.h:429)
==3028==    by 0x422F98: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:79)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce7718 is 40 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
==3028== Invalid read of size 8
==3028==    at 0x43192C: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:715)
==3028==    by 0x4318D6: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:705)
==3028==    by 0x42F9D5: BinarySearchTree<int, double>::clear() (bst.h:728)
==3028==    by 0x42E13D: BinarySearchTree<int, double>::~BinarySearchTree() (bst.h:429)
==3028==    by 0x422F98: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:79)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce76f0 is 0 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
==3028== Invalid write of size 8
==3028==    at 0x430155: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x430187: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x43193E: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:715)
==3028==    by 0x4318D6: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:705)
==3028==    by 0x42F9D5: BinarySearchTree<int, double>::clear() (bst.h:728)
==3028==    by 0x42E13D: BinarySearchTree<int, double>::~BinarySearchTree() (bst.h:429)
==3028==    by 0x422F98: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:79)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce76f0 is 0 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
==3028== Invalid free() / delete / delete[] / realloc()
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x43193E: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:715)
==3028==    by 0x4318D6: BinarySearchTree<int, double>::clearHelper(Node<int, double>*) (bst.h:705)
==3028==    by 0x42F9D5: BinarySearchTree<int, double>::clear() (bst.h:728)
==3028==    by 0x42E13D: BinarySearchTree<int, double>::~BinarySearchTree() (bst.h:429)
==3028==    by 0x422F98: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:79)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Address 0x5ce76f0 is 0 bytes inside a block of size 48 free'd
==3028==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x430193: Node<int, double>::~Node() (bst.h:73)
==3028==    by 0x42E4F5: BinarySearchTree<int, double>::remove(int const&) (bst.h:591)
==3028==    by 0x4229A4: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:68)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==  Block was alloc'd at
==3028==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3028==    by 0x42E1A9: BinarySearchTree<int, double>::insert(std::pair<int const, double> const&) (bst.h:496)
==3028==    by 0x4228A1: BSTRemove_TwoChildrenRemove_3Node_Test::TestBody() (test_remove.cpp:65)
==3028==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3028== 
[  FAILED  ] BSTRemove.TwoChildrenRemove_3Node (96 ms)
[----------] 1 test from BSTRemove (102 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (132 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] BSTRemove.TwoChildrenRemove_3Node

 1 FAILED TEST
==3028== 
==3028== HEAP SUMMARY:
==3028==     in use at exit: 72,704 bytes in 1 blocks
==3028==   total heap usage: 496 allocs, 496 frees, 157,844 bytes allocated
==3028== 
==3028== LEAK SUMMARY:
==3028==    definitely lost: 0 bytes in 0 blocks
==3028==    indirectly lost: 0 bytes in 0 blocks
==3028==      possibly lost: 0 bytes in 0 blocks
==3028==    still reachable: 0 bytes in 0 blocks
==3028==         suppressed: 72,704 bytes in 1 blocks
==3028== 
==3028== For counts of detected and suppressed errors, rerun with: -v
==3028== ERROR SUMMARY: 9 errors from 9 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.90 sec
----------------------------------------------------------
Test Failed.
"BSTRemove.TwoChildrenRemove_3Node" end time: Jul 10 21:06 PDT
"BSTRemove.TwoChildrenRemove_3Node" time elapsed: 00:00:00
----------------------------------------------------------

22/59 Testing: BSTRemove.TwoChildrenRemove_4Node
22/59 Test: BSTRemove.TwoChildrenRemove_4Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.TwoChildrenRemove_4Node"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTRemove.TwoChildrenRemove_4Node" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3029== Memcheck, a memory error detector
==3029== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3029== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3029== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTRemove.TwoChildrenRemove_4Node
==3029== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.TwoChildrenRemove_4Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.TwoChildrenRemove_4Node
[       OK ] BSTRemove.TwoChildrenRemove_4Node (49 ms)
[----------] 1 test from BSTRemove (55 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (86 ms total)
[  PASSED  ] 1 test.
==3029== 
==3029== HEAP SUMMARY:
==3029==     in use at exit: 72,704 bytes in 1 blocks
==3029==   total heap usage: 390 allocs, 389 frees, 133,461 bytes allocated
==3029== 
==3029== LEAK SUMMARY:
==3029==    definitely lost: 0 bytes in 0 blocks
==3029==    indirectly lost: 0 bytes in 0 blocks
==3029==      possibly lost: 0 bytes in 0 blocks
==3029==    still reachable: 0 bytes in 0 blocks
==3029==         suppressed: 72,704 bytes in 1 blocks
==3029== 
==3029== For counts of detected and suppressed errors, rerun with: -v
==3029== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.TwoChildrenRemove_4Node" end time: Jul 10 21:06 PDT
"BSTRemove.TwoChildrenRemove_4Node" time elapsed: 00:00:00
----------------------------------------------------------

23/59 Testing: BSTRemove.Random50x30ele
23/59 Test: BSTRemove.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.Random50x30ele"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTRemove.Random50x30ele" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3030== Memcheck, a memory error detector
==3030== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3030== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3030== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTRemove.Random50x30ele
==3030== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.Random50x30ele
==3030== Invalid read of size 4
==3030==    at 0x4100E7: testing::AssertionResult checkValidTraversal<int, int>(Node<int, int>*) (check_bst.h:56)
==3030==    by 0x4105A3: testing::AssertionResult checkValidTraversal<int, int>(Node<int, int>*) (check_bst.h:87)
==3030==    by 0x4105A3: testing::AssertionResult checkValidTraversal<int, int>(Node<int, int>*) (check_bst.h:87)
==3030==    by 0x40C096: testing::AssertionResult isValidTree<int, int>(BinarySearchTree<int, int>&) (check_bst.h:47)
==3030==    by 0x40A782: testing::AssertionResult verifyBST<int, int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&) (check_bst.h:335)
==3030==    by 0x42404C: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:137)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8c8 is 8 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid read of size 4
==3030==    at 0x414449: testing::Message& testing::Message::operator<< <int>(int const&) (gtest-message.h:131)
==3030==    by 0x410874: testing::AssertionResult& testing::AssertionResult::operator<< <int>(int const&) (gtest.h:283)
==3030==    by 0x410174: testing::AssertionResult checkValidTraversal<int, int>(Node<int, int>*) (check_bst.h:57)
==3030==    by 0x4105A3: testing::AssertionResult checkValidTraversal<int, int>(Node<int, int>*) (check_bst.h:87)
==3030==    by 0x4105A3: testing::AssertionResult checkValidTraversal<int, int>(Node<int, int>*) (check_bst.h:87)
==3030==    by 0x40C096: testing::AssertionResult isValidTree<int, int>(BinarySearchTree<int, int>&) (check_bst.h:47)
==3030==    by 0x40A782: testing::AssertionResult verifyBST<int, int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&) (check_bst.h:335)
==3030==    by 0x42404C: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:137)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8c8 is 8 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/test_remove.cpp:137: Failure
Value of: verifyBST(testTree, randomData)
  Actual: false (The left child of 79 is 105 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
==3030== Invalid read of size 8
==3030==    at 0x40C2E7: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:703)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8c0 is 0 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid read of size 8
==3030==    at 0x410004: Node<int, int>::getLeft() const (bst.h:135)
==3030==    by 0x40C2F9: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:703)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8d8 is 24 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid read of size 8
==3030==    at 0x40C308: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8c0 is 0 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid read of size 8
==3030==    at 0x410004: Node<int, int>::getLeft() const (bst.h:135)
==3030==    by 0x40C31A: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8d8 is 24 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid read of size 8
==3030==    at 0x40C331: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:710)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8c0 is 0 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid read of size 8
==3030==    at 0x410016: Node<int, int>::getRight() const (bst.h:144)
==3030==    by 0x40C343: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:710)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8e0 is 32 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid read of size 8
==3030==    at 0x40C382: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:715)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8c0 is 0 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid write of size 8
==3030==    at 0x4116D5: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x411707: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x40C394: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:715)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8c0 is 0 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
==3030== Invalid free() / delete / delete[] / realloc()
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x40C394: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:715)
==3030==    by 0x40C32C: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:705)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40C376: BinarySearchTree<int, int>::clearHelper(Node<int, int>*) (bst.h:712)
==3030==    by 0x40A963: BinarySearchTree<int, int>::clear() (bst.h:728)
==3030==    by 0x40A399: BinarySearchTree<int, int>::~BinarySearchTree() (bst.h:429)
==3030==    by 0x4241C1: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:115)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Address 0x5cec8c0 is 0 bytes inside a block of size 40 free'd
==3030==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x411713: Node<int, int>::~Node() (bst.h:73)
==3030==    by 0x41F763: BinarySearchTree<int, int>::remove(int const&) (bst.h:591)
==3030==    by 0x423FE9: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:134)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==  Block was alloc'd at
==3030==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3030==    by 0x40C002: BinarySearchTree<int, int>::insert(std::pair<int const, int> const&) (bst.h:529)
==3030==    by 0x40A6D2: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3030==    by 0x423DA8: BSTRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3030==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3030== 
[  FAILED  ] BSTRemove.Random50x30ele (155 ms)
[----------] 1 test from BSTRemove (161 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (191 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] BSTRemove.Random50x30ele

 1 FAILED TEST
==3030== 
==3030== HEAP SUMMARY:
==3030==     in use at exit: 72,704 bytes in 1 blocks
==3030==   total heap usage: 675 allocs, 675 frees, 160,531 bytes allocated
==3030== 
==3030== LEAK SUMMARY:
==3030==    definitely lost: 0 bytes in 0 blocks
==3030==    indirectly lost: 0 bytes in 0 blocks
==3030==      possibly lost: 0 bytes in 0 blocks
==3030==    still reachable: 0 bytes in 0 blocks
==3030==         suppressed: 72,704 bytes in 1 blocks
==3030== 
==3030== For counts of detected and suppressed errors, rerun with: -v
==3030== ERROR SUMMARY: 11 errors from 11 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.02 sec
----------------------------------------------------------
Test Failed.
"BSTRemove.Random50x30ele" end time: Jul 10 21:06 PDT
"BSTRemove.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

24/59 Testing: BSTStress.InsertRemove
24/59 Test: BSTStress.InsertRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTStress.InsertRemove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTStress.InsertRemove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3031== Memcheck, a memory error detector
==3031== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3031== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3031== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTStress.InsertRemove
==3031== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTStress.InsertRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTStress
[ RUN      ] BSTStress.InsertRemove
==3031== Invalid read of size 4
==3031==    at 0x433449: testing::AssertionResult checkValidTraversal<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (check_bst.h:56)
==3031==    by 0x433905: testing::AssertionResult checkValidTraversal<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (check_bst.h:87)
==3031==    by 0x430E8F: testing::AssertionResult isValidTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (check_bst.h:47)
==3031==    by 0x42F3C3: testing::AssertionResult verifyBST<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::set<int, std::less<int>, std::allocator<int> > const&) (check_bst.h:335)
==3031==    by 0x426A23: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:242)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce8978 is 8 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
==3031== Invalid read of size 4
==3031==    at 0x414449: testing::Message& testing::Message::operator<< <int>(int const&) (gtest-message.h:131)
==3031==    by 0x410874: testing::AssertionResult& testing::AssertionResult::operator<< <int>(int const&) (gtest.h:283)
==3031==    by 0x4334D6: testing::AssertionResult checkValidTraversal<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (check_bst.h:57)
==3031==    by 0x433905: testing::AssertionResult checkValidTraversal<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (check_bst.h:87)
==3031==    by 0x430E8F: testing::AssertionResult isValidTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (check_bst.h:47)
==3031==    by 0x42F3C3: testing::AssertionResult verifyBST<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::set<int, std::less<int>, std::allocator<int> > const&) (check_bst.h:335)
==3031==    by 0x426A23: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:242)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce8978 is 8 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/test_remove.cpp:242: Failure
Value of: verifyBST(b, {item3.first, item4.first, item6.first, item9.first})
  Actual: false (The left child of 6 is 7 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
==3031== Invalid read of size 8
==3031==    at 0x43175D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:703)
==3031==    by 0x4317A2: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:705)
==3031==    by 0x4317EC: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:712)
==3031==    by 0x42F975: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (bst.h:728)
==3031==    by 0x42F07D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (bst.h:429)
==3031==    by 0x42A360: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:149)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce8970 is 0 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
==3031== Invalid read of size 8
==3031==    at 0x430DB4: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getLeft() const (bst.h:135)
==3031==    by 0x43176F: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:703)
==3031==    by 0x4317A2: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:705)
==3031==    by 0x4317EC: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:712)
==3031==    by 0x42F975: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (bst.h:728)
==3031==    by 0x42F07D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (bst.h:429)
==3031==    by 0x42A360: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:149)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce89a8 is 56 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
==3031== Invalid read of size 8
==3031==    at 0x4317A7: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:710)
==3031==    by 0x4317A2: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:705)
==3031==    by 0x4317EC: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:712)
==3031==    by 0x42F975: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (bst.h:728)
==3031==    by 0x42F07D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (bst.h:429)
==3031==    by 0x42A360: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:149)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce8970 is 0 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
==3031== Invalid read of size 8
==3031==    at 0x430DC6: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getRight() const (bst.h:144)
==3031==    by 0x4317B9: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:710)
==3031==    by 0x4317A2: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:705)
==3031==    by 0x4317EC: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:712)
==3031==    by 0x42F975: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (bst.h:728)
==3031==    by 0x42F07D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (bst.h:429)
==3031==    by 0x42A360: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:149)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce89b0 is 64 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
==3031== Invalid read of size 8
==3031==    at 0x4317F8: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:715)
==3031==    by 0x4317A2: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:705)
==3031==    by 0x4317EC: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:712)
==3031==    by 0x42F975: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (bst.h:728)
==3031==    by 0x42F07D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (bst.h:429)
==3031==    by 0x42A360: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:149)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce8970 is 0 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
==3031== Invalid write of size 8
==3031==    at 0x4316D1: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x431713: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x43180A: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:715)
==3031==    by 0x4317A2: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:705)
==3031==    by 0x4317EC: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:712)
==3031==    by 0x42F975: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (bst.h:728)
==3031==    by 0x42F07D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (bst.h:429)
==3031==    by 0x42A360: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:149)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce8970 is 0 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
==3031== Invalid read of size 8
==3031==    at 0x51766C3: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==3031==    by 0x42DFDB: std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair() (stl_pair.h:96)
==3031==    by 0x4316E3: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x431713: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x43180A: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:715)
==3031==    by 0x4317A2: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:705)
==3031==    by 0x4317EC: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:712)
==3031==    by 0x42F975: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (bst.h:728)
==3031==    by 0x42F07D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (bst.h:429)
==3031==    by 0x42A360: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:149)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce8980 is 16 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
==3031== Invalid free() / delete / delete[] / realloc()
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x43180A: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:715)
==3031==    by 0x4317A2: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:705)
==3031==    by 0x4317EC: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clearHelper(Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*) (bst.h:712)
==3031==    by 0x42F975: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (bst.h:728)
==3031==    by 0x42F07D: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (bst.h:429)
==3031==    by 0x42A360: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:149)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Address 0x5ce8970 is 0 bytes inside a block of size 72 free'd
==3031==    at 0x4C2F23B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x43171F: Node<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Node() (bst.h:73)
==3031==    by 0x42F631: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (bst.h:591)
==3031==    by 0x426974: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:241)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==  Block was alloc'd at
==3031==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3031==    by 0x42F303: BinarySearchTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (bst.h:529)
==3031==    by 0x4264F3: BSTStress_InsertRemove_Test::TestBody() (test_remove.cpp:232)
==3031==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3031== 
[  FAILED  ] BSTStress.InsertRemove (127 ms)
[----------] 1 test from BSTStress (134 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (164 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] BSTStress.InsertRemove

 1 FAILED TEST
==3031== 
==3031== HEAP SUMMARY:
==3031==     in use at exit: 72,704 bytes in 1 blocks
==3031==   total heap usage: 517 allocs, 517 frees, 153,339 bytes allocated
==3031== 
==3031== LEAK SUMMARY:
==3031==    definitely lost: 0 bytes in 0 blocks
==3031==    indirectly lost: 0 bytes in 0 blocks
==3031==      possibly lost: 0 bytes in 0 blocks
==3031==    still reachable: 0 bytes in 0 blocks
==3031==         suppressed: 72,704 bytes in 1 blocks
==3031== 
==3031== For counts of detected and suppressed errors, rerun with: -v
==3031== ERROR SUMMARY: 10 errors from 10 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.94 sec
----------------------------------------------------------
Test Failed.
"BSTStress.InsertRemove" end time: Jul 10 21:06 PDT
"BSTStress.InsertRemove" time elapsed: 00:00:00
----------------------------------------------------------

25/59 Testing: BSTStress.Remove
25/59 Test: BSTStress.Remove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTStress.Remove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTStress.Remove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3032== Memcheck, a memory error detector
==3032== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3032== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3032== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTStress.Remove
==3032== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTStress.Remove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTStress
[ RUN      ] BSTStress.Remove
Before any removals, tree is: 
==3032== Invalid read of size 8
==3032==    at 0x41472C: BinarySearchTree<int, int>::iterator::operator++() (bst.h:388)
==3032==    by 0x410B73: BinarySearchTree<int, int>::printRoot(Node<int, int>*) const (print_bst.h:128)
==3032==    by 0x40C245: BinarySearchTree<int, int>::print() const (bst.h:445)
==3032==    by 0x42C1C3: BSTStress_Remove_Test::TestBody() (test_remove.cpp:397)
==3032==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3032== 
==3032== 
==3032== Process terminating with default action of signal 11 (SIGSEGV)
==3032==  Access not within mapped region at address 0x0
==3032==    at 0x41472C: BinarySearchTree<int, int>::iterator::operator++() (bst.h:388)
==3032==    by 0x410B73: BinarySearchTree<int, int>::printRoot(Node<int, int>*) const (print_bst.h:128)
==3032==    by 0x40C245: BinarySearchTree<int, int>::print() const (bst.h:445)
==3032==    by 0x42C1C3: BSTStress_Remove_Test::TestBody() (test_remove.cpp:397)
==3032==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3032==  If you believe this happened as a result of a stack
==3032==  overflow in your program's main thread (unlikely but
==3032==  possible), you can try to increase the size of the
==3032==  main thread stack using the --main-stacksize= flag.
==3032==  The main thread stack size used in this run was 8388608.
==3032== 
==3032== HEAP SUMMARY:
==3032==     in use at exit: 84,038 bytes in 123 blocks
==3032==   total heap usage: 379 allocs, 256 frees, 126,996 bytes allocated
==3032== 
==3032== LEAK SUMMARY:
==3032==    definitely lost: 0 bytes in 0 blocks
==3032==    indirectly lost: 0 bytes in 0 blocks
==3032==      possibly lost: 0 bytes in 0 blocks
==3032==    still reachable: 11,334 bytes in 122 blocks
==3032==         suppressed: 72,704 bytes in 1 blocks
==3032== Reachable blocks (those to which a pointer was found) are not shown.
==3032== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3032== 
==3032== For counts of detected and suppressed errors, rerun with: -v
==3032== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.09 sec
----------------------------------------------------------
Test Failed.
"BSTStress.Remove" end time: Jul 10 21:06 PDT
"BSTStress.Remove" time elapsed: 00:00:01
----------------------------------------------------------

26/59 Testing: BSTBalance.EmptyTree
26/59 Test: BSTBalance.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.EmptyTree"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTBalance.EmptyTree" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3037== Memcheck, a memory error detector
==3037== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3037== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3037== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTBalance.EmptyTree
==3037== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.EmptyTree
[       OK ] BSTBalance.EmptyTree (9 ms)
[----------] 1 test from BSTBalance (18 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (53 ms total)
[  PASSED  ] 1 test.
==3037== 
==3037== HEAP SUMMARY:
==3037==     in use at exit: 72,704 bytes in 1 blocks
==3037==   total heap usage: 383 allocs, 382 frees, 132,959 bytes allocated
==3037== 
==3037== LEAK SUMMARY:
==3037==    definitely lost: 0 bytes in 0 blocks
==3037==    indirectly lost: 0 bytes in 0 blocks
==3037==      possibly lost: 0 bytes in 0 blocks
==3037==    still reachable: 0 bytes in 0 blocks
==3037==         suppressed: 72,704 bytes in 1 blocks
==3037== 
==3037== For counts of detected and suppressed errors, rerun with: -v
==3037== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.EmptyTree" end time: Jul 10 21:06 PDT
"BSTBalance.EmptyTree" time elapsed: 00:00:00
----------------------------------------------------------

27/59 Testing: BSTBalance.OneNode
27/59 Test: BSTBalance.OneNode
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.OneNode"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTBalance.OneNode" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3038== Memcheck, a memory error detector
==3038== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3038== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3038== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTBalance.OneNode
==3038== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.OneNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.OneNode
[       OK ] BSTBalance.OneNode (8 ms)
[----------] 1 test from BSTBalance (13 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (44 ms total)
[  PASSED  ] 1 test.
==3038== 
==3038== HEAP SUMMARY:
==3038==     in use at exit: 72,704 bytes in 1 blocks
==3038==   total heap usage: 383 allocs, 382 frees, 132,945 bytes allocated
==3038== 
==3038== LEAK SUMMARY:
==3038==    definitely lost: 0 bytes in 0 blocks
==3038==    indirectly lost: 0 bytes in 0 blocks
==3038==      possibly lost: 0 bytes in 0 blocks
==3038==    still reachable: 0 bytes in 0 blocks
==3038==         suppressed: 72,704 bytes in 1 blocks
==3038== 
==3038== For counts of detected and suppressed errors, rerun with: -v
==3038== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.84 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.OneNode" end time: Jul 10 21:06 PDT
"BSTBalance.OneNode" time elapsed: 00:00:00
----------------------------------------------------------

28/59 Testing: BSTBalance.3Nodes_Unbalanced
28/59 Test: BSTBalance.3Nodes_Unbalanced
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.3Nodes_Unbalanced"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTBalance.3Nodes_Unbalanced" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3039== Memcheck, a memory error detector
==3039== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3039== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3039== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTBalance.3Nodes_Unbalanced
==3039== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.3Nodes_Unbalanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.3Nodes_Unbalanced
[       OK ] BSTBalance.3Nodes_Unbalanced (22 ms)
[----------] 1 test from BSTBalance (28 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (67 ms total)
[  PASSED  ] 1 test.
==3039== 
==3039== HEAP SUMMARY:
==3039==     in use at exit: 72,704 bytes in 1 blocks
==3039==   total heap usage: 386 allocs, 385 frees, 133,135 bytes allocated
==3039== 
==3039== LEAK SUMMARY:
==3039==    definitely lost: 0 bytes in 0 blocks
==3039==    indirectly lost: 0 bytes in 0 blocks
==3039==      possibly lost: 0 bytes in 0 blocks
==3039==    still reachable: 0 bytes in 0 blocks
==3039==         suppressed: 72,704 bytes in 1 blocks
==3039== 
==3039== For counts of detected and suppressed errors, rerun with: -v
==3039== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.97 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.3Nodes_Unbalanced" end time: Jul 10 21:06 PDT
"BSTBalance.3Nodes_Unbalanced" time elapsed: 00:00:00
----------------------------------------------------------

29/59 Testing: BSTBalance.3Nodes_Balanced
29/59 Test: BSTBalance.3Nodes_Balanced
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.3Nodes_Balanced"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTBalance.3Nodes_Balanced" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3040== Memcheck, a memory error detector
==3040== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3040== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3040== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTBalance.3Nodes_Balanced
==3040== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.3Nodes_Balanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.3Nodes_Balanced
[       OK ] BSTBalance.3Nodes_Balanced (19 ms)
[----------] 1 test from BSTBalance (26 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (59 ms total)
[  PASSED  ] 1 test.
==3040== 
==3040== HEAP SUMMARY:
==3040==     in use at exit: 72,704 bytes in 1 blocks
==3040==   total heap usage: 386 allocs, 385 frees, 133,121 bytes allocated
==3040== 
==3040== LEAK SUMMARY:
==3040==    definitely lost: 0 bytes in 0 blocks
==3040==    indirectly lost: 0 bytes in 0 blocks
==3040==      possibly lost: 0 bytes in 0 blocks
==3040==    still reachable: 0 bytes in 0 blocks
==3040==         suppressed: 72,704 bytes in 1 blocks
==3040== 
==3040== For counts of detected and suppressed errors, rerun with: -v
==3040== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.88 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.3Nodes_Balanced" end time: Jul 10 21:06 PDT
"BSTBalance.3Nodes_Balanced" time elapsed: 00:00:00
----------------------------------------------------------

30/59 Testing: BSTBalance.UnbalancedSubtree
30/59 Test: BSTBalance.UnbalancedSubtree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.UnbalancedSubtree"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTBalance.UnbalancedSubtree" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3041== Memcheck, a memory error detector
==3041== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3041== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3041== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTBalance.UnbalancedSubtree
==3041== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.UnbalancedSubtree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.UnbalancedSubtree
==3041== Invalid read of size 8
==3041==    at 0x413832: BinarySearchTree<unsigned short, unsigned short>::iterator::operator++() (bst.h:388)
==3041==    by 0x40ED38: BinarySearchTree<unsigned short, unsigned short>::printRoot(Node<unsigned short, unsigned short>*) const (print_bst.h:128)
==3041==    by 0x40B639: BinarySearchTree<unsigned short, unsigned short>::print() const (bst.h:445)
==3041==    by 0x43A1F6: BSTBalance_UnbalancedSubtree_Test::TestBody() (test_balance.cpp:62)
==3041==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3041== 
==3041== 
==3041== Process terminating with default action of signal 11 (SIGSEGV)
==3041==  Access not within mapped region at address 0x0
==3041==    at 0x413832: BinarySearchTree<unsigned short, unsigned short>::iterator::operator++() (bst.h:388)
==3041==    by 0x40ED38: BinarySearchTree<unsigned short, unsigned short>::printRoot(Node<unsigned short, unsigned short>*) const (print_bst.h:128)
==3041==    by 0x40B639: BinarySearchTree<unsigned short, unsigned short>::print() const (bst.h:445)
==3041==    by 0x43A1F6: BSTBalance_UnbalancedSubtree_Test::TestBody() (test_balance.cpp:62)
==3041==    by 0x463612: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45B383: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45B63C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45B824: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45DCD0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x45E0E0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests)
==3041==  If you believe this happened as a result of a stack
==3041==  overflow in your program's main thread (unlikely but
==3041==  possible), you can try to increase the size of the
==3041==  main thread stack using the --main-stacksize= flag.
==3041==  The main thread stack size used in this run was 8388608.
==3041== 
==3041== HEAP SUMMARY:
==3041==     in use at exit: 84,210 bytes in 127 blocks
==3041==   total heap usage: 383 allocs, 256 frees, 127,240 bytes allocated
==3041== 
==3041== LEAK SUMMARY:
==3041==    definitely lost: 0 bytes in 0 blocks
==3041==    indirectly lost: 0 bytes in 0 blocks
==3041==      possibly lost: 0 bytes in 0 blocks
==3041==    still reachable: 11,506 bytes in 126 blocks
==3041==         suppressed: 72,704 bytes in 1 blocks
==3041== Reachable blocks (those to which a pointer was found) are not shown.
==3041== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3041== 
==3041== For counts of detected and suppressed errors, rerun with: -v
==3041== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.98 sec
----------------------------------------------------------
Test Failed.
"BSTBalance.UnbalancedSubtree" end time: Jul 10 21:06 PDT
"BSTBalance.UnbalancedSubtree" time elapsed: 00:00:00
----------------------------------------------------------

31/59 Testing: BSTBalance.Random50x30ele
31/59 Test: BSTBalance.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.Random50x30ele"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests
"BSTBalance.Random50x30ele" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3046== Memcheck, a memory error detector
==3046== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3046== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3046== Command: /home/cs104/hw-ykelty/hw7/hw7_check/bst_tests/bst_tests --gtest_filter=BSTBalance.Random50x30ele
==3046== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.Random50x30ele
[       OK ] BSTBalance.Random50x30ele (204 ms)
[----------] 1 test from BSTBalance (212 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (241 ms total)
[  PASSED  ] 1 test.
==3046== 
==3046== HEAP SUMMARY:
==3046==     in use at exit: 72,704 bytes in 1 blocks
==3046==   total heap usage: 3,534 allocs, 3,533 frees, 263,394 bytes allocated
==3046== 
==3046== LEAK SUMMARY:
==3046==    definitely lost: 0 bytes in 0 blocks
==3046==    indirectly lost: 0 bytes in 0 blocks
==3046==      possibly lost: 0 bytes in 0 blocks
==3046==    still reachable: 0 bytes in 0 blocks
==3046==         suppressed: 72,704 bytes in 1 blocks
==3046== 
==3046== For counts of detected and suppressed errors, rerun with: -v
==3046== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.04 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.Random50x30ele" end time: Jul 10 21:06 PDT
"BSTBalance.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

32/59 Testing: AVLBST.ConstructionDestruction
32/59 Test: AVLBST.ConstructionDestruction
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLBST.ConstructionDestruction"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLBST.ConstructionDestruction" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3047== Memcheck, a memory error detector
==3047== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3047== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3047== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLBST.ConstructionDestruction
==3047== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLBST.ConstructionDestruction
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLBST
[ RUN      ] AVLBST.ConstructionDestruction
[       OK ] AVLBST.ConstructionDestruction (6 ms)
[----------] 1 test from AVLBST (12 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (42 ms total)
[  PASSED  ] 1 test.
==3047== 
==3047== HEAP SUMMARY:
==3047==     in use at exit: 72,704 bytes in 1 blocks
==3047==   total heap usage: 333 allocs, 332 frees, 129,881 bytes allocated
==3047== 
==3047== LEAK SUMMARY:
==3047==    definitely lost: 0 bytes in 0 blocks
==3047==    indirectly lost: 0 bytes in 0 blocks
==3047==      possibly lost: 0 bytes in 0 blocks
==3047==    still reachable: 0 bytes in 0 blocks
==3047==         suppressed: 72,704 bytes in 1 blocks
==3047== 
==3047== For counts of detected and suppressed errors, rerun with: -v
==3047== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.81 sec
----------------------------------------------------------
Test Passed.
"AVLBST.ConstructionDestruction" end time: Jul 10 21:06 PDT
"AVLBST.ConstructionDestruction" time elapsed: 00:00:00
----------------------------------------------------------

33/59 Testing: AVLInsert.OneNode
33/59 Test: AVLInsert.OneNode
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.OneNode"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.OneNode" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3048== Memcheck, a memory error detector
==3048== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3048== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3048== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.OneNode
==3048== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.OneNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.OneNode
[       OK ] AVLInsert.OneNode (39 ms)
[----------] 1 test from AVLInsert (45 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (75 ms total)
[  PASSED  ] 1 test.
==3048== 
==3048== HEAP SUMMARY:
==3048==     in use at exit: 72,704 bytes in 1 blocks
==3048==   total heap usage: 335 allocs, 334 frees, 129,958 bytes allocated
==3048== 
==3048== LEAK SUMMARY:
==3048==    definitely lost: 0 bytes in 0 blocks
==3048==    indirectly lost: 0 bytes in 0 blocks
==3048==      possibly lost: 0 bytes in 0 blocks
==3048==    still reachable: 0 bytes in 0 blocks
==3048==         suppressed: 72,704 bytes in 1 blocks
==3048== 
==3048== For counts of detected and suppressed errors, rerun with: -v
==3048== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.OneNode" end time: Jul 10 21:06 PDT
"AVLInsert.OneNode" time elapsed: 00:00:00
----------------------------------------------------------

34/59 Testing: AVLInsert.DoubleInsertLeft
34/59 Test: AVLInsert.DoubleInsertLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.DoubleInsertLeft"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.DoubleInsertLeft" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3049== Memcheck, a memory error detector
==3049== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3049== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3049== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.DoubleInsertLeft
==3049== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.DoubleInsertLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.DoubleInsertLeft
[       OK ] AVLInsert.DoubleInsertLeft (45 ms)
[----------] 1 test from AVLInsert (54 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (85 ms total)
[  PASSED  ] 1 test.
==3049== 
==3049== HEAP SUMMARY:
==3049==     in use at exit: 72,704 bytes in 1 blocks
==3049==   total heap usage: 337 allocs, 336 frees, 130,029 bytes allocated
==3049== 
==3049== LEAK SUMMARY:
==3049==    definitely lost: 0 bytes in 0 blocks
==3049==    indirectly lost: 0 bytes in 0 blocks
==3049==      possibly lost: 0 bytes in 0 blocks
==3049==    still reachable: 0 bytes in 0 blocks
==3049==         suppressed: 72,704 bytes in 1 blocks
==3049== 
==3049== For counts of detected and suppressed errors, rerun with: -v
==3049== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.DoubleInsertLeft" end time: Jul 10 21:06 PDT
"AVLInsert.DoubleInsertLeft" time elapsed: 00:00:00
----------------------------------------------------------

35/59 Testing: AVLInsert.DoubleInsertRight
35/59 Test: AVLInsert.DoubleInsertRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.DoubleInsertRight"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.DoubleInsertRight" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3050== Memcheck, a memory error detector
==3050== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3050== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3050== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.DoubleInsertRight
==3050== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.DoubleInsertRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.DoubleInsertRight
a
[       OK ] AVLInsert.DoubleInsertRight (46 ms)
[----------] 1 test from AVLInsert (53 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (82 ms total)
[  PASSED  ] 1 test.
==3050== 
==3050== HEAP SUMMARY:
==3050==     in use at exit: 72,704 bytes in 1 blocks
==3050==   total heap usage: 337 allocs, 336 frees, 130,036 bytes allocated
==3050== 
==3050== LEAK SUMMARY:
==3050==    definitely lost: 0 bytes in 0 blocks
==3050==    indirectly lost: 0 bytes in 0 blocks
==3050==      possibly lost: 0 bytes in 0 blocks
==3050==    still reachable: 0 bytes in 0 blocks
==3050==         suppressed: 72,704 bytes in 1 blocks
==3050== 
==3050== For counts of detected and suppressed errors, rerun with: -v
==3050== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.84 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.DoubleInsertRight" end time: Jul 10 21:06 PDT
"AVLInsert.DoubleInsertRight" time elapsed: 00:00:00
----------------------------------------------------------

36/59 Testing: AVLInsert.InsertZigZigLeft
36/59 Test: AVLInsert.InsertZigZigLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZigLeft"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.InsertZigZigLeft" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3051== Memcheck, a memory error detector
==3051== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3051== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3051== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZigLeft
==3051== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZigLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZigLeft
-1 -1
-2 -1
[       OK ] AVLInsert.InsertZigZigLeft (61 ms)
[----------] 1 test from AVLInsert (67 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (109 ms total)
[  PASSED  ] 1 test.
==3051== 
==3051== HEAP SUMMARY:
==3051==     in use at exit: 72,704 bytes in 1 blocks
==3051==   total heap usage: 339 allocs, 338 frees, 130,117 bytes allocated
==3051== 
==3051== LEAK SUMMARY:
==3051==    definitely lost: 0 bytes in 0 blocks
==3051==    indirectly lost: 0 bytes in 0 blocks
==3051==      possibly lost: 0 bytes in 0 blocks
==3051==    still reachable: 0 bytes in 0 blocks
==3051==         suppressed: 72,704 bytes in 1 blocks
==3051== 
==3051== For counts of detected and suppressed errors, rerun with: -v
==3051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.87 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZigLeft" end time: Jul 10 21:06 PDT
"AVLInsert.InsertZigZigLeft" time elapsed: 00:00:00
----------------------------------------------------------

37/59 Testing: AVLInsert.InsertZigZigRight
37/59 Test: AVLInsert.InsertZigZigRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZigRight"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.InsertZigZigRight" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3052== Memcheck, a memory error detector
==3052== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3052== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3052== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZigRight
==3052== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZigRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZigRight
a
a
1 1
2 1
[       OK ] AVLInsert.InsertZigZigRight (53 ms)
[----------] 1 test from AVLInsert (59 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (90 ms total)
[  PASSED  ] 1 test.
==3052== 
==3052== HEAP SUMMARY:
==3052==     in use at exit: 72,704 bytes in 1 blocks
==3052==   total heap usage: 339 allocs, 338 frees, 130,124 bytes allocated
==3052== 
==3052== LEAK SUMMARY:
==3052==    definitely lost: 0 bytes in 0 blocks
==3052==    indirectly lost: 0 bytes in 0 blocks
==3052==      possibly lost: 0 bytes in 0 blocks
==3052==    still reachable: 0 bytes in 0 blocks
==3052==         suppressed: 72,704 bytes in 1 blocks
==3052== 
==3052== For counts of detected and suppressed errors, rerun with: -v
==3052== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZigRight" end time: Jul 10 21:06 PDT
"AVLInsert.InsertZigZigRight" time elapsed: 00:00:00
----------------------------------------------------------

38/59 Testing: AVLInsert.InsertZigZagLeft
38/59 Test: AVLInsert.InsertZigZagLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZagLeft"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.InsertZigZagLeft" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3053== Memcheck, a memory error detector
==3053== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3053== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3053== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZagLeft
==3053== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZagLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZagLeft
a
-1 1
-2 1
-2 1
0 0
[       OK ] AVLInsert.InsertZigZagLeft (58 ms)
[----------] 1 test from AVLInsert (65 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (94 ms total)
[  PASSED  ] 1 test.
==3053== 
==3053== HEAP SUMMARY:
==3053==     in use at exit: 72,704 bytes in 1 blocks
==3053==   total heap usage: 339 allocs, 338 frees, 130,117 bytes allocated
==3053== 
==3053== LEAK SUMMARY:
==3053==    definitely lost: 0 bytes in 0 blocks
==3053==    indirectly lost: 0 bytes in 0 blocks
==3053==      possibly lost: 0 bytes in 0 blocks
==3053==    still reachable: 0 bytes in 0 blocks
==3053==         suppressed: 72,704 bytes in 1 blocks
==3053== 
==3053== For counts of detected and suppressed errors, rerun with: -v
==3053== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZagLeft" end time: Jul 10 21:06 PDT
"AVLInsert.InsertZigZagLeft" time elapsed: 00:00:00
----------------------------------------------------------

39/59 Testing: AVLInsert.InsertZigZagRight
39/59 Test: AVLInsert.InsertZigZagRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZagRight"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.InsertZigZagRight" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3054== Memcheck, a memory error detector
==3054== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3054== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3054== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZagRight
==3054== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZagRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZagRight
a
1 -1
2 -1
2 -1
2 -1
[       OK ] AVLInsert.InsertZigZagRight (57 ms)
[----------] 1 test from AVLInsert (63 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (94 ms total)
[  PASSED  ] 1 test.
==3054== 
==3054== HEAP SUMMARY:
==3054==     in use at exit: 72,704 bytes in 1 blocks
==3054==   total heap usage: 339 allocs, 338 frees, 130,124 bytes allocated
==3054== 
==3054== LEAK SUMMARY:
==3054==    definitely lost: 0 bytes in 0 blocks
==3054==    indirectly lost: 0 bytes in 0 blocks
==3054==      possibly lost: 0 bytes in 0 blocks
==3054==    still reachable: 0 bytes in 0 blocks
==3054==         suppressed: 72,704 bytes in 1 blocks
==3054== 
==3054== For counts of detected and suppressed errors, rerun with: -v
==3054== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.87 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZagRight" end time: Jul 10 21:06 PDT
"AVLInsert.InsertZigZagRight" time elapsed: 00:00:00
----------------------------------------------------------

40/59 Testing: AVLInsert.7Elements
40/59 Test: AVLInsert.7Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.7Elements"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.7Elements" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3057== Memcheck, a memory error detector
==3057== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3057== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3057== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.7Elements
==3057== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.7Elements
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.7Elements
-1 -1
-2 -1
a
0 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:103: Failure
Value of: verifyAVL(testTree, std::set<uint16_t>({5, 3, 1, 10, 15, 2, 4}))
  Actual: false (the right child of 3 does not have its parent set correctly)
Expected: true
[  FAILED  ] AVLInsert.7Elements (83 ms)
[----------] 1 test from AVLInsert (89 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (120 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLInsert.7Elements

 1 FAILED TEST
==3057== 
==3057== HEAP SUMMARY:
==3057==     in use at exit: 72,896 bytes in 5 blocks
==3057==   total heap usage: 414 allocs, 409 frees, 144,696 bytes allocated
==3057== 
==3057== 192 (48 direct, 144 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 5
==3057==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3057==    by 0x4098D1: AVLTree<unsigned short, unsigned short>::insert(std::pair<unsigned short const, unsigned short> const&) (avlbst.h:356)
==3057==    by 0x406F5A: AVLInsert_7Elements_Test::TestBody() (test_insert.cpp:100)
==3057==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3057==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3057==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3057==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3057==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3057==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3057==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3057== 
==3057== LEAK SUMMARY:
==3057==    definitely lost: 48 bytes in 1 blocks
==3057==    indirectly lost: 144 bytes in 3 blocks
==3057==      possibly lost: 0 bytes in 0 blocks
==3057==    still reachable: 0 bytes in 0 blocks
==3057==         suppressed: 72,704 bytes in 1 blocks
==3057== 
==3057== For counts of detected and suppressed errors, rerun with: -v
==3057== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.89 sec
----------------------------------------------------------
Test Failed.
"AVLInsert.7Elements" end time: Jul 10 21:06 PDT
"AVLInsert.7Elements" time elapsed: 00:00:00
----------------------------------------------------------

41/59 Testing: AVLClear.Clear
41/59 Test: AVLClear.Clear
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLClear.Clear"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLClear.Clear" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3058== Memcheck, a memory error detector
==3058== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3058== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3058== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLClear.Clear
==3058== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLClear.Clear
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLClear
[ RUN      ] AVLClear.Clear
[       OK ] AVLClear.Clear (24 ms)
[----------] 1 test from AVLClear (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (61 ms total)
[  PASSED  ] 1 test.
==3058== 
==3058== HEAP SUMMARY:
==3058==     in use at exit: 72,704 bytes in 1 blocks
==3058==   total heap usage: 310 allocs, 309 frees, 129,090 bytes allocated
==3058== 
==3058== LEAK SUMMARY:
==3058==    definitely lost: 0 bytes in 0 blocks
==3058==    indirectly lost: 0 bytes in 0 blocks
==3058==      possibly lost: 0 bytes in 0 blocks
==3058==    still reachable: 0 bytes in 0 blocks
==3058==         suppressed: 72,704 bytes in 1 blocks
==3058== 
==3058== For counts of detected and suppressed errors, rerun with: -v
==3058== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"AVLClear.Clear" end time: Jul 10 21:06 PDT
"AVLClear.Clear" time elapsed: 00:00:00
----------------------------------------------------------

42/59 Testing: AVLInsert.Duplicates
42/59 Test: AVLInsert.Duplicates
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Duplicates"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.Duplicates" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3059== Memcheck, a memory error detector
==3059== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3059== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3059== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.Duplicates
==3059== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Duplicates
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Duplicates
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:130: Failure
Value of: verifyAVL(testTree, std::set<uint16_t>({5, 3, 1, 15}))
  Actual: false (the right child of 3 does not have its parent set correctly)
Expected: true
[  FAILED  ] AVLInsert.Duplicates (79 ms)
[----------] 1 test from AVLInsert (87 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (116 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLInsert.Duplicates

 1 FAILED TEST
==3059== 
==3059== HEAP SUMMARY:
==3059==     in use at exit: 72,896 bytes in 5 blocks
==3059==   total heap usage: 411 allocs, 406 frees, 144,433 bytes allocated
==3059== 
==3059== 96 (48 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 5
==3059==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3059==    by 0x4098D1: AVLTree<unsigned short, unsigned short>::insert(std::pair<unsigned short const, unsigned short> const&) (avlbst.h:356)
==3059==    by 0x4076A2: AVLInsert_Duplicates_Test::TestBody() (test_insert.cpp:125)
==3059==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059== 
==3059== 96 (48 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 5
==3059==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3059==    by 0x4098D1: AVLTree<unsigned short, unsigned short>::insert(std::pair<unsigned short const, unsigned short> const&) (avlbst.h:356)
==3059==    by 0x407762: AVLInsert_Duplicates_Test::TestBody() (test_insert.cpp:127)
==3059==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3059== 
==3059== LEAK SUMMARY:
==3059==    definitely lost: 96 bytes in 2 blocks
==3059==    indirectly lost: 96 bytes in 2 blocks
==3059==      possibly lost: 0 bytes in 0 blocks
==3059==    still reachable: 0 bytes in 0 blocks
==3059==         suppressed: 72,704 bytes in 1 blocks
==3059== 
==3059== For counts of detected and suppressed errors, rerun with: -v
==3059== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.90 sec
----------------------------------------------------------
Test Failed.
"AVLInsert.Duplicates" end time: Jul 10 21:06 PDT
"AVLInsert.Duplicates" time elapsed: 00:00:00
----------------------------------------------------------

43/59 Testing: AVLInsert.Random50x30ele
43/59 Test: AVLInsert.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Random50x30ele"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.Random50x30ele" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3060== Memcheck, a memory error detector
==3060== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3060== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3060== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.Random50x30ele
==3060== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Random50x30ele
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of 141 is 87 which is less than its parent and not allowed for a right child)
Expected: true
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -16 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 28 does not have its parent set correctly)
Expected: true
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 28 does not have its parent set correctly)
Expected: true
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 50 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -74 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of -50 is -70 which is less than its parent and not allowed for a right child)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of 8 is 7 which is less than its parent and not allowed for a right child)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
a
0 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The left child of -145 is -144 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
-1 -1
-2 -1
0 -1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -75 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of 31 is -9 which is less than its parent and not allowed for a right child)
Expected: true
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -3 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of 97 is -42 which is less than its parent and not allowed for a right child)
Expected: true
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
a
0 1
-1 1
1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of 115 is -62 which is less than its parent and not allowed for a right child)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -89 does not have its parent set correctly)
Expected: true
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 52 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The left child of -17 is 24 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 47 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The left child of -150 is 44 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
a
a
1 1
2 1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 37 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -75 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
a
0 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
a
0 1
-1 1
1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -110 does not have its parent set correctly)
Expected: true
-1 -1
-2 -1
a
0 1
a
1 1
2 1
a
0 1
-1 1
1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -135 does not have its parent set correctly)
Expected: true
-1 -1
-2 -1
0 -1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 2 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The left child of -130 is 42 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
a
a
1 1
2 1
0 -1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -34 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
a
0 1
a
1 1
2 1
a
0 1
-1 1
1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -109 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -10 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 111 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 30 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -70 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
a
0 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The left child of -109 is -100 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 104 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
0 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 9 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -83 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The left child of -147 is 5 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 89 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of 137 is -18 which is less than its parent and not allowed for a right child)
Expected: true
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 21 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
0 -1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 113 does not have its parent set correctly)
Expected: true
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 113 does not have its parent set correctly)
Expected: true
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -16 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
a
0 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The left child of -109 is 39 which is larger than its parent and not allowed for a left child in a BST)
Expected: true
a
-1 1
-2 1
-2 1
0 0
a
0 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of -28 is -80 which is less than its parent and not allowed for a right child)
Expected: true
a
-1 1
-2 1
-2 1
0 0
a
0 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (The right child of 143 is 76 which is less than its parent and not allowed for a right child)
Expected: true
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 93 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -81 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
a
0 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 75 does not have its parent set correctly)
Expected: true
a
1 -1
2 -1
2 -1
2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 73 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
a
0 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:151: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -93 does not have its parent set correctly)
Expected: true
[  FAILED  ] AVLInsert.Random50x30ele (454 ms)
[----------] 1 test from AVLInsert (460 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (489 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLInsert.Random50x30ele

 1 FAILED TEST
==3060== 
==3060== HEAP SUMMARY:
==3060==     in use at exit: 135,104 bytes in 1,301 blocks
==3060==   total heap usage: 6,848 allocs, 5,547 frees, 993,915 bytes allocated
==3060== 
==3060== 18,912 (7,008 direct, 11,904 indirect) bytes in 146 blocks are definitely lost in loss record 2 of 5
==3060==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3060==    by 0x421B63: AVLTree<int, int>::insert(std::pair<int const, int> const&) (avlbst.h:371)
==3060==    by 0x40A288: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3060==    by 0x407ABD: AVLInsert_Random50x30ele_Test::TestBody() (test_insert.cpp:150)
==3060==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060== 
==3060== 43,488 (14,880 direct, 28,608 indirect) bytes in 310 blocks are definitely lost in loss record 4 of 5
==3060==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3060==    by 0x421A50: AVLTree<int, int>::insert(std::pair<int const, int> const&) (avlbst.h:356)
==3060==    by 0x40A288: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3060==    by 0x407ABD: AVLInsert_Random50x30ele_Test::TestBody() (test_insert.cpp:150)
==3060==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3060== 
==3060== LEAK SUMMARY:
==3060==    definitely lost: 21,888 bytes in 456 blocks
==3060==    indirectly lost: 40,512 bytes in 844 blocks
==3060==      possibly lost: 0 bytes in 0 blocks
==3060==    still reachable: 0 bytes in 0 blocks
==3060==         suppressed: 72,704 bytes in 1 blocks
==3060== 
==3060== For counts of detected and suppressed errors, rerun with: -v
==3060== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.29 sec
----------------------------------------------------------
Test Failed.
"AVLInsert.Random50x30ele" end time: Jul 10 21:06 PDT
"AVLInsert.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

44/59 Testing: AVLInsert.Random3x5000ele
44/59 Test: AVLInsert.Random3x5000ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Random3x5000ele"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLInsert.Random3x5000ele" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3061== Memcheck, a memory error detector
==3061== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3061== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3061== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLInsert.Random3x5000ele
==3061== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Random3x5000ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Random3x5000ele
-1 -1
-2 -1
0 -1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:175: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of 10256 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
a
1 1
2 1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
a
1 1
2 1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:175: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -8756 does not have its parent set correctly)
Expected: true
a
a
1 1
2 1
0 -1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
-1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
-1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
-1 -1
-2 -1
0 -1
1 1
-1 -1
-2 -1
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_insert.cpp:175: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -2470 does not have its parent set correctly)
Expected: true
[  FAILED  ] AVLInsert.Random3x5000ele (1695 ms)
[----------] 1 test from AVLInsert (1701 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1732 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLInsert.Random3x5000ele

 1 FAILED TEST
==3061== 
==3061== HEAP SUMMARY:
==3061==     in use at exit: 792,128 bytes in 14,989 blocks
==3061==   total heap usage: 30,545 allocs, 15,556 frees, 1,551,336 bytes allocated
==3061== 
==3061== 117,792 (35,856 direct, 81,936 indirect) bytes in 747 blocks are definitely lost in loss record 2 of 5
==3061==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3061==    by 0x421B63: AVLTree<int, int>::insert(std::pair<int const, int> const&) (avlbst.h:371)
==3061==    by 0x40A288: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3061==    by 0x407D87: AVLInsert_Random3x5000ele_Test::TestBody() (test_insert.cpp:174)
==3061==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061== 
==3061== 601,632 (177,120 direct, 424,512 indirect) bytes in 3,690 blocks are definitely lost in loss record 5 of 5
==3061==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3061==    by 0x421A50: AVLTree<int, int>::insert(std::pair<int const, int> const&) (avlbst.h:356)
==3061==    by 0x40A288: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3061==    by 0x407D87: AVLInsert_Random3x5000ele_Test::TestBody() (test_insert.cpp:174)
==3061==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3061== 
==3061== LEAK SUMMARY:
==3061==    definitely lost: 212,976 bytes in 4,437 blocks
==3061==    indirectly lost: 506,448 bytes in 10,551 blocks
==3061==      possibly lost: 0 bytes in 0 blocks
==3061==    still reachable: 0 bytes in 0 blocks
==3061==         suppressed: 72,704 bytes in 1 blocks
==3061== 
==3061== For counts of detected and suppressed errors, rerun with: -v
==3061== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.55 sec
----------------------------------------------------------
Test Failed.
"AVLInsert.Random3x5000ele" end time: Jul 10 21:06 PDT
"AVLInsert.Random3x5000ele" time elapsed: 00:00:02
----------------------------------------------------------

45/59 Testing: AVLRemove.EmptyTree
45/59 Test: AVLRemove.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.EmptyTree"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLRemove.EmptyTree" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3062== Memcheck, a memory error detector
==3062== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3062== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3062== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLRemove.EmptyTree
==3062== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.EmptyTree
[       OK ] AVLRemove.EmptyTree (17 ms)
[----------] 1 test from AVLRemove (23 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (53 ms total)
[  PASSED  ] 1 test.
==3062== 
==3062== HEAP SUMMARY:
==3062==     in use at exit: 72,704 bytes in 1 blocks
==3062==   total heap usage: 334 allocs, 333 frees, 129,839 bytes allocated
==3062== 
==3062== LEAK SUMMARY:
==3062==    definitely lost: 0 bytes in 0 blocks
==3062==    indirectly lost: 0 bytes in 0 blocks
==3062==      possibly lost: 0 bytes in 0 blocks
==3062==    still reachable: 0 bytes in 0 blocks
==3062==         suppressed: 72,704 bytes in 1 blocks
==3062== 
==3062== For counts of detected and suppressed errors, rerun with: -v
==3062== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.83 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.EmptyTree" end time: Jul 10 21:06 PDT
"AVLRemove.EmptyTree" time elapsed: 00:00:00
----------------------------------------------------------

46/59 Testing: AVLRemove.NodeMismatch
46/59 Test: AVLRemove.NodeMismatch
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.NodeMismatch"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLRemove.NodeMismatch" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3063== Memcheck, a memory error detector
==3063== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3063== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3063== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLRemove.NodeMismatch
==3063== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.NodeMismatch
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.NodeMismatch
a
[       OK ] AVLRemove.NodeMismatch (52 ms)
[----------] 1 test from AVLRemove (57 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (88 ms total)
[  PASSED  ] 1 test.
==3063== 
==3063== HEAP SUMMARY:
==3063==     in use at exit: 72,704 bytes in 1 blocks
==3063==   total heap usage: 338 allocs, 337 frees, 130,196 bytes allocated
==3063== 
==3063== LEAK SUMMARY:
==3063==    definitely lost: 0 bytes in 0 blocks
==3063==    indirectly lost: 0 bytes in 0 blocks
==3063==      possibly lost: 0 bytes in 0 blocks
==3063==    still reachable: 0 bytes in 0 blocks
==3063==         suppressed: 72,704 bytes in 1 blocks
==3063== 
==3063== For counts of detected and suppressed errors, rerun with: -v
==3063== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.NodeMismatch" end time: Jul 10 21:06 PDT
"AVLRemove.NodeMismatch" time elapsed: 00:00:00
----------------------------------------------------------

47/59 Testing: AVLRemove.SingleRemove
47/59 Test: AVLRemove.SingleRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.SingleRemove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLRemove.SingleRemove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3064== Memcheck, a memory error detector
==3064== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3064== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3064== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLRemove.SingleRemove
==3064== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.SingleRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.SingleRemove
[       OK ] AVLRemove.SingleRemove (21 ms)
[----------] 1 test from AVLRemove (27 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (58 ms total)
[  PASSED  ] 1 test.
==3064== 
==3064== HEAP SUMMARY:
==3064==     in use at exit: 72,704 bytes in 1 blocks
==3064==   total heap usage: 334 allocs, 333 frees, 129,881 bytes allocated
==3064== 
==3064== LEAK SUMMARY:
==3064==    definitely lost: 0 bytes in 0 blocks
==3064==    indirectly lost: 0 bytes in 0 blocks
==3064==      possibly lost: 0 bytes in 0 blocks
==3064==    still reachable: 0 bytes in 0 blocks
==3064==         suppressed: 72,704 bytes in 1 blocks
==3064== 
==3064== For counts of detected and suppressed errors, rerun with: -v
==3064== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.82 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.SingleRemove" end time: Jul 10 21:06 PDT
"AVLRemove.SingleRemove" time elapsed: 00:00:00
----------------------------------------------------------

48/59 Testing: AVLRemove.RightChildRemove
48/59 Test: AVLRemove.RightChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.RightChildRemove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLRemove.RightChildRemove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3065== Memcheck, a memory error detector
==3065== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3065== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3065== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLRemove.RightChildRemove
==3065== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.RightChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.RightChildRemove
a
a
1 1
2 1
[       OK ] AVLRemove.RightChildRemove (53 ms)
[----------] 1 test from AVLRemove (60 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (89 ms total)
[  PASSED  ] 1 test.
==3065== 
==3065== HEAP SUMMARY:
==3065==     in use at exit: 72,704 bytes in 1 blocks
==3065==   total heap usage: 338 allocs, 337 frees, 130,101 bytes allocated
==3065== 
==3065== LEAK SUMMARY:
==3065==    definitely lost: 0 bytes in 0 blocks
==3065==    indirectly lost: 0 bytes in 0 blocks
==3065==      possibly lost: 0 bytes in 0 blocks
==3065==    still reachable: 0 bytes in 0 blocks
==3065==         suppressed: 72,704 bytes in 1 blocks
==3065== 
==3065== For counts of detected and suppressed errors, rerun with: -v
==3065== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.RightChildRemove" end time: Jul 10 21:06 PDT
"AVLRemove.RightChildRemove" time elapsed: 00:00:00
----------------------------------------------------------

49/59 Testing: AVLRemove.LeftChildRemove
49/59 Test: AVLRemove.LeftChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.LeftChildRemove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLRemove.LeftChildRemove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3066== Memcheck, a memory error detector
==3066== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3066== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3066== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLRemove.LeftChildRemove
==3066== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.LeftChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.LeftChildRemove
-1 -1
-2 -1
[       OK ] AVLRemove.LeftChildRemove (56 ms)
[----------] 1 test from AVLRemove (62 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (91 ms total)
[  PASSED  ] 1 test.
==3066== 
==3066== HEAP SUMMARY:
==3066==     in use at exit: 72,704 bytes in 1 blocks
==3066==   total heap usage: 338 allocs, 337 frees, 130,094 bytes allocated
==3066== 
==3066== LEAK SUMMARY:
==3066==    definitely lost: 0 bytes in 0 blocks
==3066==    indirectly lost: 0 bytes in 0 blocks
==3066==      possibly lost: 0 bytes in 0 blocks
==3066==    still reachable: 0 bytes in 0 blocks
==3066==         suppressed: 72,704 bytes in 1 blocks
==3066== 
==3066== For counts of detected and suppressed errors, rerun with: -v
==3066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.85 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.LeftChildRemove" end time: Jul 10 21:06 PDT
"AVLRemove.LeftChildRemove" time elapsed: 00:00:00
----------------------------------------------------------

50/59 Testing: AVLRemove.TwoChildrenRemove_3Node
50/59 Test: AVLRemove.TwoChildrenRemove_3Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.TwoChildrenRemove_3Node"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLRemove.TwoChildrenRemove_3Node" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3067== Memcheck, a memory error detector
==3067== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3067== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3067== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLRemove.TwoChildrenRemove_3Node
==3067== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.TwoChildrenRemove_3Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.TwoChildrenRemove_3Node
a
-1 1
-2 1
-2 1
0 0
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:70: Failure
Value of: verifyAVL(bst, {1, 3})
  Actual: false (The right child of 3 is 2 which is less than its parent and not allowed for a right child)
Expected: true
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:74: Failure
Value of: bst.root_->getKey()
  Actual: 3
Expected: 1
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:77: Failure
Value of: bst.root_->getRight()->getKey()
  Actual: 2
Expected: 3
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:79: Failure
Value of: bst.root_->getLeft()
  Actual: 0x5ce5d40
Expected: nullptr
Which is: NULL
[  FAILED  ] AVLRemove.TwoChildrenRemove_3Node (97 ms)
[----------] 1 test from AVLRemove (105 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (133 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLRemove.TwoChildrenRemove_3Node

 1 FAILED TEST
==3067== 
==3067== HEAP SUMMARY:
==3067==     in use at exit: 72,704 bytes in 1 blocks
==3067==   total heap usage: 543 allocs, 542 frees, 173,331 bytes allocated
==3067== 
==3067== LEAK SUMMARY:
==3067==    definitely lost: 0 bytes in 0 blocks
==3067==    indirectly lost: 0 bytes in 0 blocks
==3067==      possibly lost: 0 bytes in 0 blocks
==3067==    still reachable: 0 bytes in 0 blocks
==3067==         suppressed: 72,704 bytes in 1 blocks
==3067== 
==3067== For counts of detected and suppressed errors, rerun with: -v
==3067== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.91 sec
----------------------------------------------------------
Test Failed.
"AVLRemove.TwoChildrenRemove_3Node" end time: Jul 10 21:06 PDT
"AVLRemove.TwoChildrenRemove_3Node" time elapsed: 00:00:00
----------------------------------------------------------

51/59 Testing: AVLRemove.TwoChildrenRemove_4Node
51/59 Test: AVLRemove.TwoChildrenRemove_4Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.TwoChildrenRemove_4Node"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLRemove.TwoChildrenRemove_4Node" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3068== Memcheck, a memory error detector
==3068== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3068== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3068== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLRemove.TwoChildrenRemove_4Node
==3068== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.TwoChildrenRemove_4Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.TwoChildrenRemove_4Node
a
-1 1
-2 1
-2 1
0 0
0 -1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:93: Failure
Value of: verifyAVL(bst, {2, 6, 4})
  Actual: false (The right child of 6 is 5 which is less than its parent and not allowed for a right child)
Expected: true
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:97: Failure
Value of: bst.root_->getKey()
  Actual: 6
Expected: 4
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:100: Failure
Value of: bst.root_->getRight()->getKey()
  Actual: 5
Expected: 6
[  FAILED  ] AVLRemove.TwoChildrenRemove_4Node (99 ms)
[----------] 1 test from AVLRemove (105 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (138 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLRemove.TwoChildrenRemove_4Node

 1 FAILED TEST
==3068== 
==3068== HEAP SUMMARY:
==3068==     in use at exit: 72,704 bytes in 1 blocks
==3068==   total heap usage: 504 allocs, 503 frees, 164,776 bytes allocated
==3068== 
==3068== LEAK SUMMARY:
==3068==    definitely lost: 0 bytes in 0 blocks
==3068==    indirectly lost: 0 bytes in 0 blocks
==3068==      possibly lost: 0 bytes in 0 blocks
==3068==    still reachable: 0 bytes in 0 blocks
==3068==         suppressed: 72,704 bytes in 1 blocks
==3068== 
==3068== For counts of detected and suppressed errors, rerun with: -v
==3068== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.94 sec
----------------------------------------------------------
Test Failed.
"AVLRemove.TwoChildrenRemove_4Node" end time: Jul 10 21:06 PDT
"AVLRemove.TwoChildrenRemove_4Node" time elapsed: 00:00:00
----------------------------------------------------------

52/59 Testing: AVLRemove.Random50x30ele
52/59 Test: AVLRemove.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.Random50x30ele"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLRemove.Random50x30ele" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3069== Memcheck, a memory error detector
==3069== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3069== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3069== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLRemove.Random50x30ele
==3069== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.Random50x30ele
-1 -1
-2 -1
0 -1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
1 -1
a
-1 1
-2 1
-2 1
0 0
a
0 1
-1 1
a
1 1
2 1
a
0 1
-1 1
1 -1
1 -1
2 -1
2 -1
2 -1
0 -1
-1 -1
-1 -1
-1 -1
-2 -1
0 -1
-1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
0 -1
1 1
a
-1 1
-2 1
-2 1
0 0
a
0 1
1 1
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:124: Failure
Value of: verifyAVL(testTree, randomData)
  Actual: false (the right child of -77 does not have its parent set correctly)
Expected: true
[  FAILED  ] AVLRemove.Random50x30ele (136 ms)
[----------] 1 test from AVLRemove (144 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (174 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLRemove.Random50x30ele

 1 FAILED TEST
==3069== 
==3069== HEAP SUMMARY:
==3069==     in use at exit: 73,952 bytes in 27 blocks
==3069==   total heap usage: 612 allocs, 585 frees, 153,033 bytes allocated
==3069== 
==3069== 384 (144 direct, 240 indirect) bytes in 3 blocks are definitely lost in loss record 2 of 5
==3069==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3069==    by 0x421B63: AVLTree<int, int>::insert(std::pair<int const, int> const&) (avlbst.h:371)
==3069==    by 0x40A288: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3069==    by 0x42742E: AVLRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3069==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069== 
==3069== 864 (384 direct, 480 indirect) bytes in 8 blocks are definitely lost in loss record 4 of 5
==3069==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3069==    by 0x421A50: AVLTree<int, int>::insert(std::pair<int const, int> const&) (avlbst.h:356)
==3069==    by 0x40A288: void fillTree<int>(BinarySearchTree<int, int>&, std::set<int, std::less<int>, std::allocator<int> > const&, unsigned int) (create_bst.h:39)
==3069==    by 0x42742E: AVLRemove_Random50x30ele_Test::TestBody() (test_remove.cpp:122)
==3069==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3069== 
==3069== LEAK SUMMARY:
==3069==    definitely lost: 528 bytes in 11 blocks
==3069==    indirectly lost: 720 bytes in 15 blocks
==3069==      possibly lost: 0 bytes in 0 blocks
==3069==    still reachable: 0 bytes in 0 blocks
==3069==         suppressed: 72,704 bytes in 1 blocks
==3069== 
==3069== For counts of detected and suppressed errors, rerun with: -v
==3069== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.94 sec
----------------------------------------------------------
Test Failed.
"AVLRemove.Random50x30ele" end time: Jul 10 21:06 PDT
"AVLRemove.Random50x30ele" time elapsed: 00:00:00
----------------------------------------------------------

53/59 Testing: AVLStress.InsertRemove
53/59 Test: AVLStress.InsertRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests" "--gtest_filter=AVLStress.InsertRemove"
Directory: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests
"AVLStress.InsertRemove" start time: Jul 10 21:06 PDT
Output:
----------------------------------------------------------
==3070== Memcheck, a memory error detector
==3070== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3070== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3070== Command: /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests --gtest_filter=AVLStress.InsertRemove
==3070== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLStress.InsertRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLStress
[ RUN      ] AVLStress.InsertRemove
a
-1 1
-2 1
-2 1
0 0
0 -1
a
-1 1
-2 1
-2 1
0 0
>> Binary tree structure is broken!
/home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/test_remove.cpp:191: Failure
Value of: verifyAVL(b, {item5.first, item3.first, item7.first})
  Actual: false (The right child of 5 is 5 which is less than its parent and not allowed for a right child)
Expected: true
[  FAILED  ] AVLStress.InsertRemove (111 ms)
[----------] 1 test from AVLStress (118 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (150 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLStress.InsertRemove

 1 FAILED TEST
==3070== 
==3070== HEAP SUMMARY:
==3070==     in use at exit: 72,864 bytes in 3 blocks
==3070==   total heap usage: 417 allocs, 414 frees, 147,350 bytes allocated
==3070== 
==3070== 160 (80 direct, 80 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==3070==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3070==    by 0x4326E0: AVLTree<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (avlbst.h:356)
==3070==    by 0x428699: AVLStress_InsertRemove_Test::TestBody() (test_remove.cpp:189)
==3070==    by 0x466CE2: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3070==    by 0x45EA53: testing::Test::Run() [clone .part.368] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3070==    by 0x45ED0C: testing::TestInfo::Run() [clone .part.369] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3070==    by 0x45EEF4: testing::TestCase::Run() [clone .part.370] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3070==    by 0x4613A0: testing::internal::UnitTestImpl::RunAllTests() [clone .part.371] [clone .constprop.426] (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3070==    by 0x4617B0: testing::UnitTest::Run() (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3070==    by 0x40518F: main (in /home/cs104/hw-ykelty/hw7/hw7_check/avl_tests/avl_tests)
==3070== 
==3070== LEAK SUMMARY:
==3070==    definitely lost: 80 bytes in 1 blocks
==3070==    indirectly lost: 80 bytes in 1 blocks
==3070==      possibly lost: 0 bytes in 0 blocks
==3070==    still reachable: 0 bytes in 0 blocks
==3070==         suppressed: 72,704 bytes in 1 blocks
==3070== 
==3070== For counts of detected and suppressed errors, rerun with: -v
==3070== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.92 sec
----------------------------------------------------------
Test Failed.
"AVLStress.InsertRemove" end time: Jul 10 21:06 PDT
"AVLStress.InsertRemove" time elapsed: 00:00:00
----------------------------------------------------------

